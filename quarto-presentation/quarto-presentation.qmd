---
title: "Projekt Präsentation"
subtitle: "Inhalt"
author: "Lea Frech"
execute: 
    eval: true
lang: de
format: 
    revealjs:
            embed-resources: true
            toc: true
            toc-expand: 2
            code-copy: true
            code-line-numbers: true
            scrollable: true
            incremental: true
            slide-number: c
            transition: slide
            theme: simple
---

## Einleitung Thema

:::: {.columns}

::: {.column width="50%"}
***Thema***: Die Arbeitsproduktivität gemessen an der Anzahl der gearbeiteten Stunden und Implikationen auf den Arbeitsmodus hinsichtlich dem Trend zur 4-Tage Woche
:::

::: {.column width="50%"}
***Vorhaben/ Aspekt***:, den es zu untersuchen gilt für schließliche Handlungsempfehlung
:::

::::


## Übersicht der verwendeten Variablen

| Variable  | Bedeutung  |
|--------|--------|
| Location  | Land oder Ländergruppe |
| Indicator   | Spezielle Kategorien, in denen der Datensatz aufgeschlüsselt ist, hier: der durchschnittliche Lohn  |
| Subject | Familienstatus der einzelnen Entitäten    |
| Time | Erhebungsjahr der Daten  |
| Value | Durchschnittliche Anzahl an Arbeitsstunden  |

: {tbl-colwidths="[25,75]"}

## Hours Worked

TBD
Charts anpassen und ausgewählte Schritt für Schritt aufbauen

```{python}
import pandas as pd
import altair as alt

```

```{python}
#Color Scale
colors = alt.Scale(
    range=['#003f5c','#58508d','#bc5090','#ff6361','#ffa600']
)
```

Erste Visualisierungen (Auszug aus Datenexplo)
```{python}

LINK1 = '/Users/Lea/Desktop/dst-projekt/df_selectedlocations.csv'
df_selectedlocations = pd.read_csv(LINK1)

#Chart 1 - Set Up
linechart1 = alt.Chart(df_selectedlocations).mark_line().encode(
    x=alt.X('TIME:O', title='Jahr').axis(
        titleAnchor='start',
        labelAngle= -0,
        ),
    y=alt.Y('VALUE').scale(domain=(1000,1800), bins=(1000,1200,1400,1600,1800,2000)).axis(
        title='Anzahl Stunden',
        titleAnchor='end',
        grid= False,
        ),
    strokeWidth=alt.value(4), 
    color=alt.Color('LOCATION', scale=colors),
    tooltip=['LOCATION']
).properties(
    title='Hours Worked'
)

# Chart 1 - Labels
location_list = df_selectedlocations['LOCATION'].tolist()

linechart_labels = alt.Chart(df_selectedlocations).mark_text(align='left', dx=3).encode(
    alt.X('TIME:O', aggregate='max'),
    alt.Y('VALUE:Q', aggregate={'argmax': 'VALUE'}, scale=alt.Scale(domain=(1000,1800))),
    alt.Text('LOCATION'),
    alt.Color('LOCATION:N', legend=None, scale=alt.Scale(domain=location_list,type='ordinal')), 
).properties(
    width=800,
    height=500,    
)

# Chart 1 - Final Viz
linechart1_final = alt.layer(linechart1, linechart_labels).configure_view(
    strokeWidth=0
).configure_title(
    fontSize=20,
    anchor='start',
    fontWeight='normal',
    #subtitleColor='grey',
    #subtitleFontSize=15
).configure_axis(
    labelFontSize = 12,
    titleFontSize = 12,
    titleFontWeight= 'bold',
    titleColor='grey'
).configure_text(
    fontWeight='bold',
    fontSize = 12
)

linechart1_final

```

## Hours needed to exit poverty

Boxplot

## Korrelationen?

Scatterplot

## Ein Blick in die Zukunft

So hat sich das Bruttoinlandsprodukt, das zur Messung der Arbeitsproduktivität herangezogen wurde, in den letzten zwei Jahrzehnten in Europa entwickelt und wird sich vermutlich in Zukunft entwickeln.

```{python}
#Import Datasets
LINK3 = '/Users/Lea/Desktop/dst-projekt/df3_selectedlocations.csv'
df3_selectedlocations = pd.read_csv(LINK3)

LINK4 = '/Users/Lea/Desktop/dst-projekt/europe_forecast.csv'
europe = pd.read_csv(LINK4)

#Linechart

europe_linechart = alt.Chart(europe).mark_line(strokeDash=[5, 5]).encode(
    x=alt.X('TIME:O', title='Jahr').axis(
        titleAnchor='start',
        labelAngle= -0,
        ),
    y=alt.Y('VALUE').scale(domain=(0.85,1.08)).axis(
        title='GDP per hour worked',
        titleAnchor='end',
        grid= False,
        ),
    strokeWidth=alt.value(3),
    color=alt.value('black'),
)

europe_list = europe['LOCATION'].tolist()

europe_line_labels = alt.Chart(europe).mark_text(align='left', dx=3).encode(
    alt.X('TIME:O', aggregate='max'),
    alt.Y('VALUE:Q', aggregate={'argmax': 'VALUE'}),
    alt.Text('LOCATION:N'),
    color=alt.value('black')
).properties(
    width=800,
    height=500   
)

europe_linechart_final = alt.layer( europe_linechart, europe_line_labels).configure_view(
    strokeWidth=0
).configure_title(
    fontSize=20,
    anchor='middle',
    fontWeight='bold',
).configure_axis(
    labelFontSize = 12,
    titleFontSize = 14,
    titleFontWeight= 'bold',
    titleColor='grey'
).configure_text(
    fontWeight='bold',
    fontSize = 14
)

europe_linechart_final

```

## Ein Blick in die Zukunft

So entwickelt es sich dagegen in den Ländern unserer Firmenstandorte

```{python}
colors_linechart3 = alt.Scale(
    range=['#ffa600','#ff6361',]
)

linechart3 = alt.Chart(df3_selectedlocations).mark_line().encode(
    x=alt.X('TIME:O', title='Jahr').axis(
        titleAnchor='start',
        labelAngle= -0,
        ),
    y=alt.Y('VALUE').scale(domain=(0.85,1.08)).axis(
        title='GDP per hour worked',
        titleAnchor='end',
        grid= False,
        ),
    strokeWidth=alt.value(3), 
    color=alt.Color('LOCATION', scale=colors_linechart3),
    tooltip=['LOCATION']
)

location_list = df3_selectedlocations['LOCATION'].tolist()

linechart3_labels = alt.Chart(df3_selectedlocations).mark_text(align='left', dx=3).encode(
    alt.X('TIME:O', aggregate='max'),
    alt.Y('VALUE:Q', aggregate={'argmax': 'VALUE'}),
    alt.Text('LOCATION'),
    alt.Color('LOCATION:N', legend=None, scale=alt.Scale(domain=location_list,type='ordinal')), 
).properties(
    width=800,
    height=500,    
)

linechart3_final = alt.layer(linechart3, linechart3_labels, europe_linechart, europe_line_labels).configure_view(
    strokeWidth=0,
).configure_axis(
    labelFontSize = 12,
    titleFontSize = 14,
    titleFontWeight= 'bold',
    titleColor='grey'
).configure_text(
    fontWeight='bold',
    fontSize = 14
)

linechart3_final

```

Labor Productivity Forecast
Linechart einfügen!

## Implikationen

Storytelling

Ein auffallendes Muster innerhalb der Daten bildet das Jahr 2020 ab. Die Corona Pandemie hat die Wirtschaft auf sämtlichen Ebenen beeinflusst und somit auch die Arbeitsproduktivität.

- Aufschwung seither
- Momentaufnahme: Erholung des konjunkturarmen Jahr 2023
- Es gilt: Mitarbeitende an das Unternehmen binden
- New Work Konzepte werden gefragter und relevanter 
- Kompromisse eingehen: 4 Tage Woche sehr starke Maßnahme, um diese Brücke zwischen Arbeitsproduktivität und Work-Life-Balance zu gehen
- usw. Recap der Fakten und analysierten Daten


## Handlungsempfehlung: Methoden

Wie kann Vorhaben/Hypothese umgesetzt werden?
