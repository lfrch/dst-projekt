---
title: "Firmeninterne Arbeitsproduktivität "
subtitle: "Chancen hinsichtlich des Arbeitsmodus auf der Grundlage von VIsionaryZ Firmendaten"
author: Lea Frech
execute: 
    eval: true
lang: de
format: html
toc: true
toc-title: "**In diesem Report**"
embed-resources: true
code-copy: true
code-line-numbers: true
theme: [default,style.scss]
---

<text style="color: grey">*Data Report des wöchentlichen Jours Fixe vom 28.01.24*</text>

## Anlass der Präsentation

::: {.panel-tabset}
## Ausgangssituation

In diesem Report möchte ich einen detaillierten Blick auf die Arbeitszeitgestaltung und Produktivität unseres Unternehmens <text style="color:#003f5c">**VIsionaryZ**</text> werfen, insbesondere vor dem Hintergrund des aktuellen Trends hin zur **4-Tage-Woche**, der in Großbritannien bereits Fahrt aufgenommen hat. 
Anlässlich unseres 5-jährigen Jubiläums des Firmenstandort in Deutschland und den andauernden Überlegungen, die unsere Kollegen am Hauptstandort in Großbritannien bereits angestellt haben.

<a href="https://www.tagesschau.de/wirtschaft/vier-tage-woche-102.html">**Hier**</a> mehr zu aktuellen Themen in diesem Kontext.

## Kennzahlen

Um an erster Stelle meine folgenden Erkenntnisse in ein Verhältnis zu bringen, ein paar Eckdaten zum Status Quo.
Um dafür eine Basis zu schaffen, betrachten wir zunächst unseren aktuellen im <text style="color:#003f5c">**VIsionaryZ Kosmos**</text> gelebten Arbeitsmodus: 

- Mitarbeiterinnen und Mitarbeiter arbeiten derzeit **fünf Tage pro Woche** für jeweils **8 Stunden**
- Das summiert sich innerhalb eines Geschäftsjahres auf eine Anzahl von **210 Werktagen** 
- Damit kann man von ca. **1680 Arbeitsstunden für Vollzeitbeschäftigte pro Jahr** ausgehen.

> Die **durchschnittliche Jahresarbeitszeit** ist definiert als die **Gesamtzahl der tatsächlich geleisteten Arbeitsstunden pro Jahr**. Die tatsächlich geleisteten Arbeitsstunden umfassen die reguläre Arbeitszeit von Vollzeit-, Teilzeit- und geringfügig beschäftigten Arbeitnehmern und schließen die Zeit aus, die aufgrund von Feiertagen, bezahltem Jahresurlaub, eigener Krankheit und sonstigen anderen Gründen nicht geleistet wurde.

:::

Grund für meine Beschäftigng zu dem Thema sind aktuelle Entwicklungen und Trends hinsichtlich der 4-Tages-Woche. UK gilt zudem als Vorreiter für 4-Tage-Woche und mehrere Studien zeigen eine positive Entwicklung in diesem Kontext. Deshalb häufen sich aktuell die Gespräche und Hypothesen zum Thema und Chancen für unseren Arbeitsmodus.
Deshalb möchte ich einen Ausblick geben und einfach mal die Frage stellen: *Was wäre, wenn...?* 


## Arbeitsstunden der vergangenen Geschäftsjahre

```{python}
# | echo: false
import pandas as pd
import altair as alt

# Farbskala
colors = alt.Scale(
    range=['#003f5c','#58508d','#bc5090','#ff6361','#ffa600']
)

# Import Data for Hours Worked
LINK1 = '/Users/Lea/Desktop/dst-projekt/df_selectedlocations.csv'
df_selectedlocations = pd.read_csv(LINK1)
```

::: {.panel-tabset}
# Chart

```{python}
# | echo: false
barchart1 = alt.Chart(df_selectedlocations).mark_bar().encode(
    x=alt.X('VALUE', scale=alt.Scale(bins=[0,1000,2000,3000,4000,5000,6000,7000])).axis(
        title='Hours',
        titleAnchor='start',
        grid=False,
        labelColor='black',
        tickColor='grey'),
    y=alt.Y('LOCATION').axis(
        title='Location',
        titleAnchor='middle',
        titleAngle=-90,
        labelAngle= 0,
        grid=False,
        labelColor='black',
        tickColor='black'),
    color=alt.Color('TIME:O', scale=colors, legend=alt.Legend(
        orient='none',
        legendX=0, legendY=-50,
        direction='horizontal',
        title='Year',
        titleFontSize=12,
        labelFontSize=12,
        titleAnchor='start')),
    tooltip=["TIME","VALUE"]
).properties(
    width=600,
    height=400,
    )

barchart1_labels = alt.Chart(df_selectedlocations).mark_text(baseline='middle', color='black').encode(
    x=alt.X('VALUE'),
    y=alt.Y('LOCATION')  
)



barchart1_final = alt.layer(barchart1,barchart1_labels).configure_view(
    strokeWidth=0
).configure_title(
    fontSize=20,
    anchor='middle',
    fontWeight='bold',
).configure_axis(
    labelFontSize = 11,
    labelFontWeight='bold',
    titleFontSize = 12,
    titleFontWeight= 'normal',
    titleColor='grey'
).configure_text(
    fontWeight='bold',
    fontSize = 12
)

# | echo: true
barchart1_final

```

Anhand der Visualisierung, kann man erkennen, welche Jahre innerhalb der letzten fünf Jahre eine höhere Produktivität aufweisen. Produktivität meint hier die Anzahl der geleisteten Arbeitsstunden.
Die Daten der OECD und Europäischen Union, die hier zum Vergleich unserer beiden Standorte herangezogen wurden, liegen hier in einem zu erwartenden Ranking. 

Auch das Resultat unserer Firmenstandorte erscheint auf den ersten Blick ausgeglichen. Hier gilt es allerdings noch mehr ins Detail zu gehen und noch tiefer in den Verlauf der Daten zu schauen, um ggf. Delta und Auffälligkeiten herauszustellen, die für den Kontext relevant sind.

<text style="color: grey">OECD: Organisation für wirtschaftliche Zusammenarbeit und Entwicklung. 
Hier dient es als ein zur Gesamtheit der Länder repräsentativer Zusammenschluss</text>

# Daten
Ein Überblick der zugrundeliegenden Daten:

```{python}
# | echo: false
df_selectedlocations
```

:::

::: {.panel-tabset}
## Das Jahr 2020

Das Visualisierung gestattet nun eine deutlichere Einsicht in die Daten. 
Beachtet man die Anzahl der gearbeiteten Stunden von 2019 bis 2022 lässt sich einen **deutlichen Rückgang der Arbeitsstunden** erkennen. Das Jahr 2020 verzeichnete durch die *COVID-19-Pandemie* bedingte, zwingende Umstrukturierung in das Hybride und steigenden Arbeitsausfällen durch Krankheit ein deutliches Einbußen des Regelbetriebs und damit auch der Arbeitsproduktivität.

```{python}
# | echo: false
colors_linechart1 = alt.Scale(
    range=['#ffa600','#ff6361','grey','grey']
)

#Linechart
linechart1 = alt.Chart(df_selectedlocations).mark_line().encode(
    x=alt.X('TIME:O', title='Year').axis(
        titleAnchor='start',
        labelAngle= -0,
        ),
    y=alt.Y('VALUE').scale(domain=(1000,2000), bins=(1000,1300,1600,1900,2100)).axis(
        title='Hours',
        titleAnchor='end',
        grid= False,
        ),
    strokeWidth=alt.value(4), 
    color=alt.Color('LOCATION', scale=colors_linechart1),
    tooltip=['VALUE']
)

# Chart 1 - Labels
location_list = df_selectedlocations['LOCATION'].tolist()

linechart_labels = alt.Chart(df_selectedlocations).mark_text(align='left', dx=5, fontSize=14).encode(
    alt.X('TIME:O', aggregate='max'),
    alt.Y('VALUE:Q', aggregate={'argmax': 'VALUE'}),
    alt.Text('LOCATION'),
    alt.Color('LOCATION:N', legend=None, scale=alt.Scale(domain=location_list,type='ordinal')), 
).properties(
    width=600,
    height=400,    
)

# Markers
linechart_points = alt.Chart(df_selectedlocations).mark_point(size=70, filled=True, opacity=1).encode(
    x=alt.X('TIME:O'),
    y=alt.Y('VALUE'),
    color=alt.Color('LOCATION', scale=colors_linechart1),
    tooltip=['LOCATION','TIME','VALUE']
)

#Data Labels 
linechart_datalabels = alt.Chart(df_selectedlocations[(df_selectedlocations['LOCATION'].isin(['United Kingdom', 'Germany'])) & (df_selectedlocations['TIME'] == 2020)]).mark_text(
    align='left',
    dx=5,
    dy=10,
    fontSize=14,
).encode(
    x=alt.X('TIME:O'),
    y=alt.Y('VALUE'),
    text= ('VALUE'),
    color=alt.Color('LOCATION', scale=colors_linechart1)
)

# Chart 1 - Final Viz
linechart1_final = alt.layer(linechart1, linechart_labels,linechart_points, linechart_datalabels).configure_view(
    strokeWidth=0
).configure_title(
    fontSize=25,
    anchor='start',
    fontWeight='bold',
).configure_axis(
    labelFontSize = 11,
    titleFontSize = 12,
    titleFontWeight= 'normal',
    titleColor='grey'
).configure_text(
    fontWeight='bold',
    fontSize = 12
)

# | echo: true
linechart1_final

```

Der Rückgang der Arbeitsstunden im Hauptstandort <text style="color: #ff6361">**UK**</text> war in diesem Fall noch deutlicher mit einem Delta von<text style="color: #ff6361"> **173 Stunden**</text>.<br>
Das Delta hier in <text style="color: #ffa600">**Deutschland**</text> belief sich auf <text style="color: #ffa600">**53 Stunden**</text>.

## Jahr 2021-2023

Seitdem ist jedoch ein **stetiger Anstieg** zu verzeichnen, wobei das Jahr 2022 im dargestellten Zeitraum einen Zustand erreichte, der nach der Pandemie wirtschatliche Erholung vermuten lässt. 

<text style="color: #ff6361">**In UK sind es demnach 1530 Arbeitsstunden gewesen.**</text><br>
<text style="color: #ffa600">**In Deutschland waren es dagegen 1340 Arbeitsstunden.**</text>


> Die wesentliche Differenz der Stunden unserer beiden Standorte sind auf kulturelle Unterschiede und andere Faktoren wie tarifliche Bedinungen und Beschäftigungsverhältnisse zurückzuführen.

```{python}
# | echo: false
linechart1 = alt.Chart(df_selectedlocations).mark_line().encode(
    x=alt.X('TIME:O', title='Year').axis(
        titleAnchor='start',
        labelAngle= -0,
        ),
    y=alt.Y('VALUE').scale(domain=(1000,2000), bins=(1000,1300,1600,1900,2100)).axis(
        title='Hours',
        titleAnchor='end',
        grid= False,
        ),
    strokeWidth=alt.value(4), 
    color=alt.Color('LOCATION', scale=colors_linechart1),
    tooltip=['LOCATION','VALUE']
)

# Chart 1 - Labels
location_list = df_selectedlocations['LOCATION'].tolist()

linechart_labels = alt.Chart(df_selectedlocations).mark_text(align='left', dx=5, fontSize=14).encode(
    alt.X('TIME:O', aggregate='max'),
    alt.Y('VALUE:Q', aggregate={'argmax': 'VALUE'}),
    alt.Text('LOCATION'),
    alt.Color('LOCATION:N', legend=None, scale=alt.Scale(domain=location_list,type='ordinal')), 
).properties(
    width=600,
    height=400,    
)

# Markers
linechart_points = alt.Chart(df_selectedlocations).mark_point(size=70, filled=True, opacity=1).encode(
    x=alt.X('TIME:O'),
    y=alt.Y('VALUE'),
    color=alt.Color('LOCATION', scale=colors_linechart1),
    tooltip=['LOCATION','TIME','VALUE']
)

#Data Labels 
linechart_datalabels = alt.Chart(df_selectedlocations[(df_selectedlocations['LOCATION'].isin(['United Kingdom', 'Germany'])) & (df_selectedlocations['TIME'] == 2022)]).mark_text(
    align='left',
    dx=-8,
    dy=20,
    fontSize=14,
).encode(
    x=alt.X('TIME:O'),
    y=alt.Y('VALUE'),
    text= ('VALUE'),
    color=alt.Color('LOCATION', scale=colors_linechart1)
)



# Chart 1 - Final Viz
linechart2_final = alt.layer(linechart1, linechart_labels,linechart_points, linechart_datalabels).configure_view(
    strokeWidth=0
).configure_title(
    fontSize=25,
    anchor='start',
    fontWeight='bold',
).configure_axis(
    labelFontSize = 11,
    titleFontSize = 12,
    titleFontWeight= 'normal',
    titleColor='grey'
).configure_text(
    fontWeight='bold',
    fontSize = 12
)

# | echo: true
linechart2_final

```

:::

## Interne Perspektive
**Aus dem Blick unserer Beschäftigten**

Wir betrachten die Arbeitsstunden je nach Familienstand der Mitarbeiter:innen.

::: {.panel-tabset}
## Chart

```{python}
# | echo: false
LINK2 = '/Users/Lea/Desktop/dst-projekt/df2_selectedlocations.csv'
df2_selectedlocations = pd.read_csv(LINK2)

# Code Scale for Exit Poverty
colors2 = alt.Scale(
    range=['#003f5c','#bc5090']
)

boxplot = alt.Chart(df2_selectedlocations).mark_boxplot(size=50, extent=0.5).encode(
    x=alt.X('SUBJECT').axis(
        title=None,
        labelAngle=0,
        grid=False,
        labelColor='black',
        tickColor='grey'),
    y=alt.Y('VALUE:Q', scale=alt.Scale(bins=[0,2,4,6,8,10,12,14,16,18],domain=(0,20))).axis(
        titleAnchor='start',
        grid=False,
        labelColor='black',
        tickColor='black'),
    color=alt.Color('SUBJECT', scale=colors2, legend=None),
).properties(
    width=500,
    height=450,
    title=alt.Title(
        "Hours needed to exit poverty",
        subtitle="in relation to family status",
    )
)

boxplot_final = alt.layer(boxplot).configure_view(
    strokeWidth=0
).configure_title(
    fontSize=20,
    anchor='middle',
    fontWeight='bold',
).configure_axis(
    labelFontSize = 11,
    labelFontWeight='bold',
    titleFontSize = 12,
    titleFontWeight= 'normal',
    titleColor='grey'
).configure_text(
    fontWeight='bold',
    fontSize = 12
)

# | echo: true
boxplot_final

```

<text style="color:#003f5c">Beschäftigte mit zwei Kindern sollten durchschnittlich 10,6 Stunden, d.h. **weniger als 600 Stunden im Jahr leisten.**</text><br>
<text style="color:#bc5090">Kinderlose Beschäftigte sollten dagegen im Durchschnitt 12,6 Stunden, also **etwa 700 Stunden pro Jahr** leisten.</text>

> Die Mindestanzahl an Arbeitsstunden meint hier die benötigte Stundenanzahl für Beschäftigte, aufgeschlüsselt nach kinderlos und Beschäfigte mit zwei Kindern, um ihre Grundbedarfe zu decken. Dies bietet in unserem Unternehmen nicht die Basis, sondern stellt lediglich die Untergrenze und damit eine Orientierung dar.

## Daten

```{python}
# | echo: false
#df2_selectedlocations.describe('SUBJECT').astype(int)
#df2_selectedlocations.describe().filter(items=['SUBJECT','VALUE']).astype(int)
# | echo: false
df2_selectedlocations.groupby('SUBJECT')['VALUE'].describe().astype(int)

```

:::

#### **Implikationen**

Im Kontext unseres Unternehmens, VisionaryZ, zeigt sich ein gutes Verhältnis zwischen den tatsächlich gearbeiteten Stunden und den ermittelten Mindeststunden. 
Grundsätzlich lässt sich sagen, dass mit zunehmender Anzahl an geleisteter Arbeitsstunden, die benötigte Stundenanzahl sinkt.
Dies bestärkt unser Engagement, unsere Beschäftigten bei *VIsionaryZ* stets in den Fokus zu stellen und weiterhin an unser Unternehmen zu binden. Zudem bestätigt diese Tatsache den grundsätzichen Erfolg des aktuellen Arbeitsmodus, weißt aber auch auf Optimierungspotentiale hin.
```{python}
# | echo: false
merged_df = pd.read_csv("/Users/Lea/Desktop/dst-projekt/merged_df.csv")

color_scale = alt.Scale(domain=['2 CHILDREN', 'NO CHILDREN'],
                        range=['#003f5c','#bc5090'])

#Scatterplot Code 

scatterplot_base = alt.Chart(merged_df).mark_circle(filled=True, size=100).encode(
    x=alt.X('Hours_worked:Q').axis(
        titleAnchor='start',
        grid=False),
    y=alt.Y('Hours_needed:Q').scale(bins=[0,500,1000,1500,2000],domain=[0,2000]).axis(
        grid=False),
    color=alt.Color('SUBJECT1', scale=color_scale, legend=alt.Legend(
        orient='none',
        legendX=0, legendY=-50,
        direction='horizontal',
        title='Family Status',
        titleFontSize=12,
        labelFontSize=12,
        titleAnchor='start')),
    tooltip=['SUBJECT1','Hours_needed','Hours_worked','LOCATION']
).properties(
    width=500,
    height=450
)

scatterplot_final = alt.layer(scatterplot_base).configure_view(
    strokeWidth=0
).configure_axis(
    labelFontSize = 11,
    titleFontSize = 12,
    titleFontWeight= 'normal',
    titleColor='grey'
).configure_text(
    fontWeight='bold',
    fontSize = 12
)

# | echo: true
scatterplot_final
```

## Prognose der Arbeitsproduktivität

Mit Blick auf die Entwicklung der Wirtschaft, wollte ich zudem allgemeine Produktivitätstrends werfen. 

> Die Arbeitsproduktivität ist definiert als reales Bruttoinlandsprodukt (BIP) pro Arbeitsstunde. Dies erfasst den Einsatz des Arbeitsinputs besser als der Output pro Arbeitnehmer, wobei der Arbeitsinput als die Gesamtheit der von allen beteiligten Personen geleisteten Arbeitsstunden definiert ist.
 
In dieser Visualisierung erkennt man deshalb den Produktivitätstrend der Wirtschaft innerhalb der letzten 23 Jahren und auch die Prognose für das nun angebrochene Geschäftsjahr.


```{python}
# | echo: false
LINK3 = '/Users/Lea/Desktop/dst-projekt/df3_selectedlocations.csv'
df3_selectedlocations = pd.read_csv(LINK3)

LINK4 = '/Users/Lea/Desktop/dst-projekt/europe_forecast.csv'
europe = pd.read_csv(LINK4)
```

::: {.panel-tabset}
# Chart

```{python}
# | echo: false
colors_linechart3 = alt.Scale(
    range=['#ffa600','#ff6361']
)

europe_linechart = alt.Chart(europe).mark_line(strokeDash=[5, 5]).encode(
    x=alt.X('TIME:O', title='Year').axis(
        titleAnchor='start',
        labelAngle= -0,
        ),
    y=alt.Y('VALUE').scale(domain=(0.85,1.08)).axis(
        title='GDP per hour worked',
        titleAnchor='end',
        grid= False,
        ),
    strokeWidth=alt.value(3),
    color=alt.value('grey'),
    tooltip=['LOCATION','TIME','VALUE']
)

europe_list = europe['LOCATION'].tolist()

europe_line_labels = alt.Chart(europe).mark_text(align='left', dx=3).encode(
    alt.X('TIME:O', aggregate='max'),
    alt.Y('VALUE:Q', aggregate={'argmax': 'VALUE'}),
    alt.Text('LOCATION:N'),
    color=alt.value('grey')
).properties(
    width=700,
    height=400   
)

europe_linechart_final = alt.layer( europe_linechart, europe_line_labels).configure_view(
    strokeWidth=0
).configure_title(
    fontSize=20,
    anchor='middle',
    fontWeight='bold',
).configure_axis(
    labelFontSize = 12,
    titleFontSize = 14,
    titleFontWeight= 'normal',
    titleColor='grey'
).configure_text(
    fontWeight='bold',
    fontSize = 14
)

linechart3 = alt.Chart(df3_selectedlocations).mark_line().encode(
    x=alt.X('TIME:O', title='Year').axis(
        titleAnchor='start',
        labelAngle= -0,
        ),
    y=alt.Y('VALUE').scale(domain=(0.85,1.08)).axis(
        title='GDP per hour worked',
        titleAnchor='end',
        grid= False,
        ),
    strokeWidth=alt.value(3), 
    color=alt.Color('LOCATION', scale=colors_linechart3),
    tooltip=['LOCATION','TIME','VALUE']
)

location_list = df3_selectedlocations['LOCATION'].tolist()

linechart3_labels = alt.Chart(df3_selectedlocations).mark_text(align='left', dx=3).encode(
    alt.X('TIME:O', aggregate='max'),
    alt.Y('VALUE:Q', aggregate={'argmax': 'VALUE'}),
    alt.Text('LOCATION'),
    alt.Color('LOCATION:N', legend=None, scale=alt.Scale(domain=location_list,type='ordinal')), 
).properties(
    width=700,
    height=400,    
)

# Vertical Line marker
linechart3_rule = alt.Chart(df3_selectedlocations).mark_rule(color='lightgrey').encode(
    x=alt.X('TIME:O'),
    y=alt.value(0),
    opacity=alt.condition(alt.datum.TIME == 2009, alt.value(1), alt.value(0))
)

linechart3_rule2 = alt.Chart(df3_selectedlocations).mark_rule(color='lightgrey').encode(
    x=alt.X('TIME:O'),
    y=alt.value(0),
    opacity=alt.condition(alt.datum.TIME == 2020, alt.value(1), alt.value(0))
)


linechart3_final = alt.layer(linechart3, linechart3_labels, linechart3_rule, linechart3_rule2, europe_linechart, europe_line_labels).configure_view(
    strokeWidth=0,
).configure_axis(
    labelFontSize = 12,
    titleFontSize = 14,
    titleFontWeight= 'normal',
    titleColor='grey'
).configure_text(
    fontWeight='bold',
    fontSize = 14
)

# | echo: true
linechart3_final

```

Dabei ergab sich, dass sowohl in Großbritannien als auch in Deutschland nach <text style="color: grey">wirtschaftlichen Tiefpunkten, wie im obrigen Liniendiagramm eingezeichnet</text>, eine Erholung auftrat.

2024 können wir demnach wirtschaftlich eine Produktivität, bzw. ein BIP von<text style="color:#ff6361"> 1,05 in UK</text>erwarten, während in<text style="color:#ffa600"> Deutschland, ein BIP von 1,02</text>prognostiziert wird.
In beiden Fällen kann man für die Länder der Firmenstandorte also von einem **positiven Wachstumstrend** ausgehen.

# Daten

Die Spalte VALUE entspricht hier dem gemessenen Bruttoinlandsprodukt je Land nach Erhebungsjahr im Zeithorizont 2000-2023 und einer Prognose für das derzeitige Kalenderjahr 2024.

```{python}
# | echo: false
df3_selectedlocations
```

:::

## Implikationen für unser Unternehmen

Hinsichtlich der Implikationen die Daten Revue passieren lassen:
Status quo abgebildet durch geleistete Arbeitsstunden
Perspektive der Mitarbeiter:innen durch Mindestanzahl an Stunden
allg. Arbeitsproduktivitätstrend
Wie gestalten wir 2024: Wirtschaftskurve also BIP steigt -> vermeintlich auch Produktivitätstrend
aktueller Arbeitsmodus passt, aber hinsichtlich 4 Tage Woche werden auch Chancen geboten
Was können wir dahingehend noch besser machen?



## Fazit

Die Implikationen dieser Daten legen nahe, dass unser derzeitiger Arbeitsmodus gut zur aktuellen Situation passt, aber die Einführung einer 4-Tage-Woche auch Chancen bietet. Daher empfehle ich, die Kollegen in Großbritannien zu bestärken und sie zum Pilotieren im geeigneten Rahmen zu ermutigen, um die Auswirkungen im Unternehmensumfeld messbar zu machen und genauere Daten zu erheben.

Davon abgeleitet: Handlungsempfehlungen
4-Tage-Woche bedeutet konkret 1470h/Jahr (wie erwähnt bedingt durch Abzüge)
Umstellung triggert Veränderung, die aber auch positiv sein kann -> Studien bestärken Effekt von Konzept & UK als Vorreiter Land
Deshalb Empfehlung: Kollegen in UK bestärken und zum Pilotieren im geeignetem Rahmen raten und dadurch Auswirkungen im Unternehmensumfeld messbar machen und genauere Daten zu erheben





